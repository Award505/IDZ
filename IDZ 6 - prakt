using System.Linq;
using System.IO;

        
        // Глухие согласные буквы
        char[] deafConsonants = { 'к', 'п', 'с', 'т', 'ф', 'х', 'ц', 'ч', 'ш', 'щ' };

        // Чтение данных из файла
        string filePath = "input.txt"; // Укажите путь к вашему файлу
        string content = File.ReadAllText(filePath);

        // Разделение строки на слова
        string[] words = content.Split(',');
        for (int i = 0; i < words.Length; i++)
        {
            words[i] = words[i].Trim(); // Убираем пробелы вокруг слов
        }

        // Множества для анализа
        HashSet<char> oddConsonants = new HashSet<char>(deafConsonants); // Для нечетных слов
        HashSet<char> evenConsonants = new HashSet<char>();             // Для четных слов

        // Перебор слов
        for (int i = 0; i < words.Length; i++)
        {
            HashSet<char> currentConsonants = new HashSet<char>();
            foreach (char c in words[i])
            {
                if (Array.Exists(deafConsonants, x => x == c)) // Проверяем, является ли буква глухой согласной
                {
                    currentConsonants.Add(c);
                }
            }

            if (i % 2 == 0) // Нечетное слово (индекс i + 1 нечетный)
            {
                oddConsonants.IntersectWith(currentConsonants);
            }
            else // Четное слово
            {
                evenConsonants.UnionWith(currentConsonants);
            }
        }

        // Убираем буквы из четных слов
        oddConsonants.ExceptWith(evenConsonants);

        // Преобразуем результат в список, сортируем и выводим
        List<char> result = new List<char>(oddConsonants);
        result.Sort();

        Console.WriteLine("Глухие согласные, которые входят в каждое нечетное слово и не входят ни в одно четное слово:");
        Console.WriteLine(string.Join(", ", result));
